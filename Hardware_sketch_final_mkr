#include <TinyGPSPlus.h>
#include <Arduino.h>
#include "wiring_private.h"
/* Create object named Serial1 of the class SoftwareSerial */
Uart mySerial (&sercom3, 1, 0, SERCOM_RX_PAD_1, UART_TX_PAD_0); // Create the new UART instance assigning it to pin 1 and 0
#include <ArduinoJson.h>
StaticJsonBuffer<200> jsonBuffer;
JsonObject& object = jsonBuffer.createObject();
TinyGPSPlus gps;

void setup() {
  Serial.begin(57600);	
  /* Define baud rate for software serial communication */
 /* Define baud rate for serial communication */
  Serial1.begin(57600);
 mySerial.begin(9600);
 	
  pinPeripheral(1, PIO_SERCOM); //Assign RX function to pin 1

  pinPeripheral(0, PIO_SERCOM); //Assign TX function to pin 0
 DynamicJsonBuffer jsonBuffer;
  
    Serial.println("HTTP post method :");
  Serial.print("AT\\r\\n");
  Serial1.println("AT"); /* Check Communication */
  delay(5000);
  ShowSerialData();	/* Print response on the serial monitor */
 
  /* Configure bearer profile 1 */

  Serial1.println("AT+SAPBR=3,1,\"CONTYPE\",\"GPRS\"");	/* Connection type GPRS */
  delay(5000);
  ShowSerialData();


  Serial1.println("AT+SAPBR=3,1,\"APN\",\"airtelgprs.com\"");	/* APN of the provider */
  delay(5000);
  ShowSerialData();
  

  Serial1.println("AT+SAPBR=1,1");	/* Open GPRS context */
  delay(15000);
  ShowSerialData();


  Serial1.println("AT+SAPBR=2,1");	/* Query the GPRS context */
  delay(2000);
  ShowSerialData();
  Serial1.println("AT+HTTPINIT");  /* Initialize HTTP service */
  delay(2000); 
  ShowSerialData();



   
}

void loop() {

  String sendtoserver = "";
  Showlocation();
   
  double longitude = gps.location.lng();
  double latitude = gps.location.lat();
  
  Serial.print("latitude: ");
  Serial.print(latitude);
  Serial.println(" ");
  Serial.print("longitude: ");
  Serial.print(longitude);
  


  

 
  
  Serial1.println("AT+HTTPPARA=\"CID\",1");	/* Set parameters for HTTP session */
  delay(50);
  object.set("id","HP01A1144");
  object.set("latitude",latitude);
  object.set("longitude",longitude);
  delay(100);
  object.printTo(Serial);
  Serial.println(" ");  
  
  object.prettyPrintTo(sendtoserver);
  delay(100);
 
  Serial1.println("AT+HTTPPARA=\"URL\",\"alaric.gq/iot/bus/postBusLocation\"");	/* Set parameters for HTTP session */
  delay(100);
  ShowSerialData();

  Serial1.println("AT+HTTPPARA=\"CONTENT\",\"application/json\"");
  delay(50);
  ShowSerialData();
 
 
  Serial1.println("AT+HTTPDATA=" + String(sendtoserver.length()) + ",100000");
  
  delay(50);
  ShowSerialData();
 
  Serial1.println(sendtoserver);
  delay(200);
  ShowSerialData();

  
  Serial1.println("AT+HTTPACTION=1");	/* Start POST session */
  delay(100);
  ShowSerialData();

 

 

}
// This custom version of delay() ensures that the gps object
// is being "fed".
static void smartDelay(unsigned long ms)
{
  unsigned long start = millis();
  do 
  {
    while (mySerial.available())
      gps.encode(mySerial.read());
  } while (millis() - start < ms);
}

static void printFloat(float val, bool valid, int len, int prec)
{
  if (!valid)
  {
    while (len-- > 1)
      Serial.print('*');
    Serial.print(' ');
  }
  else
  {
    Serial.print(val, prec);
    int vi = abs((int)val);
    int flen = prec + (val < 0.0 ? 2 : 1); // . and -
    flen += vi >= 1000 ? 4 : vi >= 100 ? 3 : vi >= 10 ? 2 : 1;
    for (int i=flen; i<len; ++i)
      Serial.print(' ');
  }
  smartDelay(0);
}



void Showlocation()
{
printFloat(gps.location.lat(), gps.location.isValid(), 11, 6);
printFloat(gps.location.lng(), gps.location.isValid(), 12, 6);
smartDelay(50);
}
void ShowSerialData()
{
  while(Serial1.available()!=0)	/* If data is available on serial port */
  Serial.write(char (Serial1.read()));	/* Print character received on to the serial monitor */
}
void SERCOM3_Handler()
{

  mySerial.IrqHandler();
}
